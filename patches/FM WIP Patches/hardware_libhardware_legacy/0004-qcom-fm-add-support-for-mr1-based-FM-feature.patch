From 9715bf6908ee5497231dc9469eb3984e543a6880 Mon Sep 17 00:00:00 2001
From: Chris Soyars <ctso@ctso.me>
Date: Wed, 5 Mar 2014 11:26:07 -0800
Subject: [PATCH 1/2] Revert "audio: Fix check for sonification on digital
 docks"

This reverts commit 7a133590ff567fe09b7f415371c78480d39a83e7.

Change-Id: I27968a26e755e85d4d0c150278bf7988cc86f4e6
---
 audio/AudioPolicyManagerBase.cpp | 4 +---
 1 file changed, 1 insertion(+), 3 deletions(-)

diff --git a/audio/AudioPolicyManagerBase.cpp b/audio/AudioPolicyManagerBase.cpp
index 944b783..fdf0ca8 100644
--- a/audio/AudioPolicyManagerBase.cpp
+++ b/audio/AudioPolicyManagerBase.cpp
@@ -2528,9 +2528,7 @@ audio_devices_t AudioPolicyManagerBase::getDeviceForStrategy(routing_strategy st
         if (device2 == AUDIO_DEVICE_NONE) {
             device2 = mAvailableOutputDevices & AUDIO_DEVICE_OUT_USB_DEVICE;
         }
-        if ((device2 == AUDIO_DEVICE_NONE) &&
-                (mForceUse[AudioSystem::FOR_DOCK] == AudioSystem::FORCE_DIGITAL_DOCK)
-                && (strategy != STRATEGY_SONIFICATION)) {
+        if ((device2 == AUDIO_DEVICE_NONE) && (strategy != STRATEGY_SONIFICATION)) {
             // no sonification on digital docks (e.g. USB DACs)
             device2 = mAvailableOutputDevices & AUDIO_DEVICE_OUT_DGTL_DOCK_HEADSET;
         }
-- 
1.9.2


From f457fdc483dc79e8f7be905aafba39c25e372d30 Mon Sep 17 00:00:00 2001
From: Mingming Yin <mingming@codeaurora.org>
Date: Thu, 27 Dec 2012 17:42:23 -0800
Subject: [PATCH 2/2] qcom-fm: audio: add support for mr1 based FM feature

-Add set_fm_volume() to set handle fm volume

Change-Id: I2a2c6a60b9855d9360ff8fb90849517e77e5faab
---
 audio/AudioPolicyCompatClient.cpp                |  8 ++++++++
 audio/AudioPolicyCompatClient.h                  |  3 +++
 audio/AudioPolicyManagerBase.cpp                 | 13 +++++++++++++
 include/hardware_legacy/AudioHardwareInterface.h |  5 +++++
 include/hardware_legacy/AudioPolicyInterface.h   |  5 +++++
 include/hardware_legacy/AudioSystemLegacy.h      |  3 +++
 6 files changed, 37 insertions(+)

diff --git a/audio/AudioPolicyCompatClient.cpp b/audio/AudioPolicyCompatClient.cpp
index 162968c..d730f35 100644
--- a/audio/AudioPolicyCompatClient.cpp
+++ b/audio/AudioPolicyCompatClient.cpp
@@ -128,6 +128,14 @@ status_t AudioPolicyCompatClient::setStreamVolume(
                                           volume, output, delayMs);
 }
 
+#ifdef QCOM_FM_ENABLED
+status_t AudioPolicyCompatClient::setFmVolume(float volume,
+                                              int delayMs)
+{
+    return mServiceOps->set_fm_volume(mService, volume, delayMs);
+}
+#endif
+
 status_t AudioPolicyCompatClient::startTone(ToneGenerator::tone_type tone,
                                        AudioSystem::stream_type stream)
 {
diff --git a/audio/AudioPolicyCompatClient.h b/audio/AudioPolicyCompatClient.h
index 494c8af..98df585 100644
--- a/audio/AudioPolicyCompatClient.h
+++ b/audio/AudioPolicyCompatClient.h
@@ -69,6 +69,9 @@ public:
                                      float volume,
                                      audio_io_handle_t output,
                                      int delayMs = 0);
+#ifdef QCOM_FM_ENABLED
+    virtual status_t setFmVolume(float volume, int delayMs = 0);
+#endif
     virtual status_t startTone(ToneGenerator::tone_type tone, AudioSystem::stream_type stream);
     virtual status_t stopTone();
     virtual status_t setVoiceVolume(float volume, int delayMs = 0);
diff --git a/audio/AudioPolicyManagerBase.cpp b/audio/AudioPolicyManagerBase.cpp
index fdf0ca8..56af2a0 100644
--- a/audio/AudioPolicyManagerBase.cpp
+++ b/audio/AudioPolicyManagerBase.cpp
@@ -2333,6 +2333,9 @@ AudioPolicyManagerBase::routing_strategy AudioPolicyManagerBase::getStrategy(
 #ifdef AUDIO_EXTN_INCALL_MUSIC_ENABLED
     case AudioSystem::INCALL_MUSIC:
 #endif
+#ifdef QCOM_FM_ENABLED
+    case AudioSystem::FM:
+#endif
         return STRATEGY_MEDIA;
     case AudioSystem::ENFORCED_AUDIBLE:
         return STRATEGY_ENFORCED_AUDIBLE;
@@ -2835,6 +2838,9 @@ AudioPolicyManagerBase::device_category AudioPolicyManagerBase::getDeviceCategor
         case AUDIO_DEVICE_OUT_BLUETOOTH_SCO_HEADSET:
         case AUDIO_DEVICE_OUT_BLUETOOTH_A2DP:
         case AUDIO_DEVICE_OUT_BLUETOOTH_A2DP_HEADPHONES:
+#if defined(QCOM_FM_ENABLED) || defined(STE_FM)
+        case AUDIO_DEVICE_OUT_FM:
+#endif
             return DEVICE_CATEGORY_HEADSET;
         case AUDIO_DEVICE_OUT_SPEAKER:
         case AUDIO_DEVICE_OUT_BLUETOOTH_SCO_CARKIT:
@@ -3010,6 +3016,13 @@ const AudioPolicyManagerBase::VolumeCurvePoint
         sDefaultMediaVolumeCurve  // DEVICE_CATEGORY_EARPIECE
     },
 #endif
+#ifdef QCOM_FM_ENABLED
+    { // AUDIO_STREAM_FM
+        sDefaultMediaVolumeCurve, // DEVICE_CATEGORY_HEADSET
+        sSpeakerMediaVolumeCurve, // DEVICE_CATEGORY_SPEAKER
+        sDefaultMediaVolumeCurve  // DEVICE_CATEGORY_EARPIECE
+    },
+#endif
 };
 
 void AudioPolicyManagerBase::initializeVolumeCurves()
diff --git a/include/hardware_legacy/AudioHardwareInterface.h b/include/hardware_legacy/AudioHardwareInterface.h
index b39ec3e..b716ff3 100644
--- a/include/hardware_legacy/AudioHardwareInterface.h
+++ b/include/hardware_legacy/AudioHardwareInterface.h
@@ -225,6 +225,11 @@ public:
     /** set the audio volume of a voice call. Range is between 0.0 and 1.0 */
     virtual status_t    setVoiceVolume(float volume) = 0;
 
+#ifdef QCOM_FM_ENABLED
+    /** set the fm volume. Range is between 0.0 and 1.0 */
+    virtual status_t    setFmVolume(float volume) { return 0; }
+#endif
+
     /**
      * set the audio volume for all audio activities other than voice call.
      * Range between 0.0 and 1.0. If any value other than NO_ERROR is returned,
diff --git a/include/hardware_legacy/AudioPolicyInterface.h b/include/hardware_legacy/AudioPolicyInterface.h
index 7847bdd..9cff50d 100644
--- a/include/hardware_legacy/AudioPolicyInterface.h
+++ b/include/hardware_legacy/AudioPolicyInterface.h
@@ -252,6 +252,11 @@ public:
                                      audio_io_handle_t srcOutput,
                                      audio_io_handle_t dstOutput) = 0;
 
+#ifdef QCOM_FM_ENABLED
+    // set FM volume.
+    virtual status_t setFmVolume(float volume, int delayMs = 0) { return 0; }
+#endif
+
 };
 
 extern "C" AudioPolicyInterface* createAudioPolicyManager(AudioPolicyClientInterface *clientInterface);
diff --git a/include/hardware_legacy/AudioSystemLegacy.h b/include/hardware_legacy/AudioSystemLegacy.h
index b0ca0b3..5e4073e 100644
--- a/include/hardware_legacy/AudioSystemLegacy.h
+++ b/include/hardware_legacy/AudioSystemLegacy.h
@@ -95,6 +95,9 @@ public:
 #ifdef QCOM_HARDWARE
         INCALL_MUSIC     = 10,
 #endif
+#ifdef QCOM_FM_ENABLED
+        FM               = 11,
+#endif
         NUM_STREAM_TYPES
     };
 
-- 
1.9.2

