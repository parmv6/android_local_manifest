From 28add9092fa49be579ac0de713756a65309d74d7 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Lasse=20Brudeskar=20Vik=C3=A5s?= <bvx89.at.cs@gmail.com>
Date: Sun, 19 Jan 2014 22:01:57 +0100
Subject: [PATCH] Add Download Speeds in notification

This commit adds the ability to show the current total download speed

Screenshots:
http://i.imgur.com/0ndihfX.png

ps7: remove download site, and make speed to bit/sec
ps8: make speed to byte/sec and cleanup

Change-Id: I801dbe61c7ee59d0c1d14d5851ad6dc3a7678499
---
 res/values/cm_plurals.xml                          | 33 +++++++++++
 .../providers/downloads/DownloadNotifier.java      | 68 +++++++++++++++++++---
 2 files changed, 93 insertions(+), 8 deletions(-)
 create mode 100644 res/values/cm_plurals.xml

diff --git a/res/values/cm_plurals.xml b/res/values/cm_plurals.xml
new file mode 100644
index 0000000..b201ff5
--- /dev/null
+++ b/res/values/cm_plurals.xml
@@ -0,0 +1,33 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+     Copyright (C) 2014 The CyanogenMod Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
+<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
+    <!-- Phrase describing a time duration using seconds [CHAR LIMIT=16] -->
+    <plurals name="duration_seconds">
+        <item quantity="one"><xliff:g id="count">%d</xliff:g> sec</item>
+        <item quantity="other"><xliff:g id="count">%d</xliff:g> secs</item>
+    </plurals>
+    <!-- Phrase describing a time duration using minutes [CHAR LIMIT=16] -->
+    <plurals name="duration_minutes">
+        <item quantity="one"><xliff:g id="count">%d</xliff:g> min</item>
+        <item quantity="other"><xliff:g id="count">%d</xliff:g> mins</item>
+    </plurals>
+    <!-- Phrase describing a time duration using hours [CHAR LIMIT=16] -->
+    <plurals name="duration_hours">
+        <item quantity="one"><xliff:g id="count">%d</xliff:g> hr</item>
+        <item quantity="other"><xliff:g id="count">%d</xliff:g> hrs</item>
+    </plurals>
+</resources>
diff --git a/src/com/android/providers/downloads/DownloadNotifier.java b/src/com/android/providers/downloads/DownloadNotifier.java
index ac52eba..7e084ff 100644
--- a/src/com/android/providers/downloads/DownloadNotifier.java
+++ b/src/com/android/providers/downloads/DownloadNotifier.java
@@ -42,6 +42,7 @@ import com.google.common.collect.ArrayListMultimap;
 import com.google.common.collect.Maps;
 import com.google.common.collect.Multimap;
 
+import java.text.DecimalFormat;
 import java.util.Collection;
 import java.util.HashMap;
 import java.util.Iterator;
@@ -59,6 +60,10 @@ public class DownloadNotifier {
     private static final int TYPE_WAITING = 2;
     private static final int TYPE_COMPLETE = 3;
 
+    private static final int SPEED_KB = 1024;
+    private static final int SPEED_MB = 1048576;
+    private static final int SPEED_GB = 1073741824;
+
     private final Context mContext;
     private final NotificationManager mNotifManager;
 
@@ -85,6 +90,13 @@ public class DownloadNotifier {
     @GuardedBy("mDownloadSpeed")
     private final LongSparseLongArray mDownloadTouch = new LongSparseLongArray();
 
+    /**
+     * Formatter for giving transfer speeds with maximum of one decimal places
+     */
+    private static final DecimalFormat mFormatter = new DecimalFormat("#.#");
+
+    private static final String SPEED_PLACEHOLDER = "%s %cbyte/s";
+
     public DownloadNotifier(Context context) {
         mContext = context;
         mNotifManager = (NotificationManager) context.getSystemService(
@@ -201,7 +213,9 @@ public class DownloadNotifier {
 
             // Calculate and show progress
             String remainingText = null;
+            String durationText = null;
             String percentText = null;
+            String speedText = null;
             if (type == TYPE_ACTIVE) {
                 long current = 0;
                 long total = 0;
@@ -221,9 +235,48 @@ public class DownloadNotifier {
                     percentText = res.getString(R.string.download_percent, percent);
 
                     if (speed > 0) {
+                        // Decide prefix character for speed string
+                        char preFix;
+                        double speedNormalized = speed;
+
+                        if (speed < SPEED_KB) {
+                            preFix = '\0';
+                        } else if (speed < SPEED_MB) {
+                            preFix = 'K';
+                            speedNormalized /= SPEED_KB;
+                        } else if (speed < SPEED_GB) {
+                            preFix = 'M';
+                            speedNormalized /= SPEED_MB;
+                        } else {
+                            preFix = 'G';
+                            speedNormalized /= SPEED_GB;
+                        }
+
+                        // Format the String
+                        speedText = String.format(
+                            SPEED_PLACEHOLDER,
+                            mFormatter.format(speedNormalized).toString(),
+                            preFix
+                        );
+
                         final long remainingMillis = ((total - current) * 1000) / speed;
-                        remainingText = res.getString(R.string.download_remaining,
-                                DateUtils.formatDuration(remainingMillis));
+                        if (remainingMillis >= DateUtils.HOUR_IN_MILLIS) {
+                            final int hours = (int) ((remainingMillis + 1800000)
+                                / DateUtils.HOUR_IN_MILLIS);
+                            durationText = res.getQuantityString(
+                                R.plurals.duration_hours, hours, hours);
+                        } else if (remainingMillis >= DateUtils.MINUTE_IN_MILLIS) {
+                            final int minutes = (int) ((remainingMillis + 30000)
+                                / DateUtils.MINUTE_IN_MILLIS);
+                            durationText = res.getQuantityString(
+                                R.plurals.duration_minutes, minutes, minutes);
+                        } else {
+                            final int seconds = (int) ((remainingMillis + 500)
+                                / DateUtils.SECOND_IN_MILLIS);
+                            durationText = res.getQuantityString(
+                                R.plurals.duration_seconds, seconds, seconds);
+                        }
+                        remainingText = res.getString(R.string.download_remaining, durationText);
                     }
 
                     builder.setProgress(100, percent, false);
@@ -236,16 +289,15 @@ public class DownloadNotifier {
             final Notification notif;
             if (cluster.size() == 1) {
                 final DownloadInfo info = cluster.iterator().next();
-
                 builder.setContentTitle(getDownloadTitle(res, info));
 
                 if (type == TYPE_ACTIVE) {
-                    if (!TextUtils.isEmpty(info.mDescription)) {
-                        builder.setContentText(info.mDescription);
+                    if (speedText != null) {
+                        builder.setContentText(remainingText + ", " + speedText);
+                        builder.setContentInfo(percentText);
                     } else {
-                        builder.setContentText(remainingText);
+                        builder.setContentInfo(percentText);
                     }
-                    builder.setContentInfo(percentText);
 
                 } else if (type == TYPE_WAITING) {
                     builder.setContentText(
@@ -273,7 +325,7 @@ public class DownloadNotifier {
                     builder.setContentTitle(res.getQuantityString(
                             R.plurals.notif_summary_active, cluster.size(), cluster.size()));
                     builder.setContentText(remainingText);
-                    builder.setContentInfo(percentText);
+                    builder.setContentInfo(speedText + ", " + percentText);
                     inboxStyle.setSummaryText(remainingText);
 
                 } else if (type == TYPE_WAITING) {
-- 
1.9.2

