From 46e47dbe4ab765e14e030318ffd060b264c48a46 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Lasse=20Brudeskar=20Vik=C3=A5s?= <bvx89.at.cs@gmail.com>
Date: Sun, 19 Jan 2014 22:01:57 +0100
Subject: [PATCH] Add Download Speeds in notification

This commit adds the ability to show the current total download speed

Screenshots:
https://lh6.googleusercontent.com/HXWqdF2_XSDJaAkoYo9D7RhcvRZGhxjqIIKHR777L3k=w341-h568-no

Change-Id: I801dbe61c7ee59d0c1d14d5851ad6dc3a7678499
---
 .../providers/downloads/DownloadNotifier.java      | 57 ++++++++++++++++++++--
 1 file changed, 52 insertions(+), 5 deletions(-)

diff --git a/src/com/android/providers/downloads/DownloadNotifier.java b/src/com/android/providers/downloads/DownloadNotifier.java
index ac52eba..e22acdb 100644
--- a/src/com/android/providers/downloads/DownloadNotifier.java
+++ b/src/com/android/providers/downloads/DownloadNotifier.java
@@ -42,6 +42,7 @@ import com.google.common.collect.ArrayListMultimap;
 import com.google.common.collect.Maps;
 import com.google.common.collect.Multimap;
 
+import java.text.DecimalFormat;
 import java.util.Collection;
 import java.util.HashMap;
 import java.util.Iterator;
@@ -59,6 +60,10 @@ public class DownloadNotifier {
     private static final int TYPE_WAITING = 2;
     private static final int TYPE_COMPLETE = 3;
 
+    private static final int SPEED_KB = 1024;
+    private static final int SPEED_MB = 1048576;
+    private static final int SPEED_GB = 1073741824;
+
     private final Context mContext;
     private final NotificationManager mNotifManager;
 
@@ -85,6 +90,13 @@ public class DownloadNotifier {
     @GuardedBy("mDownloadSpeed")
     private final LongSparseLongArray mDownloadTouch = new LongSparseLongArray();
 
+    /**
+     * Formatter for giving transfer speeds with maximum of one decimal places
+     */
+    private static final DecimalFormat mFormatter = new DecimalFormat("#.#");
+
+    private static final String SPEED_PLACEHOLDER = "%s %cB/s";
+
     public DownloadNotifier(Context context) {
         mContext = context;
         mNotifManager = (NotificationManager) context.getSystemService(
@@ -202,6 +214,7 @@ public class DownloadNotifier {
             // Calculate and show progress
             String remainingText = null;
             String percentText = null;
+            String speedText = null;
             if (type == TYPE_ACTIVE) {
                 long current = 0;
                 long total = 0;
@@ -221,6 +234,30 @@ public class DownloadNotifier {
                     percentText = res.getString(R.string.download_percent, percent);
 
                     if (speed > 0) {
+                        // Decide prefix character for speed string
+                        char preFix;
+                        double speedNormalized = speed;
+
+                        if (speed < SPEED_KB) {
+                            preFix = '\0';
+                        } else if (speed < SPEED_MB) {
+                            preFix = 'K';
+                            speedNormalized /= SPEED_KB;
+                        } else if (speed < SPEED_GB) {
+                            preFix = 'M';
+                            speedNormalized /= SPEED_MB;
+                        } else {
+                            preFix = 'G';
+                            speedNormalized /= SPEED_GB;
+                        }
+
+                        // Format the String
+                        speedText = String.format(
+                            SPEED_PLACEHOLDER,
+                            mFormatter.format(speedNormalized).toString(),
+                            preFix
+                        );
+
                         final long remainingMillis = ((total - current) * 1000) / speed;
                         remainingText = res.getString(R.string.download_remaining,
                                 DateUtils.formatDuration(remainingMillis));
@@ -235,17 +272,23 @@ public class DownloadNotifier {
             // Build titles and description
             final Notification notif;
             if (cluster.size() == 1) {
+
                 final DownloadInfo info = cluster.iterator().next();
 
                 builder.setContentTitle(getDownloadTitle(res, info));
 
+                String contentText = null;
+
                 if (type == TYPE_ACTIVE) {
                     if (!TextUtils.isEmpty(info.mDescription)) {
                         builder.setContentText(info.mDescription);
+                    }
+
+                    if (speedText != null) {
+                        builder.setContentInfo(speedText + ", " + remainingText + ", " + percentText);
                     } else {
-                        builder.setContentText(remainingText);
+                        builder.setContentInfo(percentText);
                     }
-                    builder.setContentInfo(percentText);
 
                 } else if (type == TYPE_WAITING) {
                     builder.setContentText(
@@ -253,10 +296,14 @@ public class DownloadNotifier {
 
                 } else if (type == TYPE_COMPLETE) {
                     if (Downloads.Impl.isStatusError(info.mStatus)) {
-                        builder.setContentText(res.getText(R.string.notification_download_failed));
+                        
+                        contentText = res.getString(R.string.notification_download_failed);
+
+                        builder.setContentText(contentText);
                     } else if (Downloads.Impl.isStatusSuccess(info.mStatus)) {
-                        builder.setContentText(
-                                res.getText(R.string.notification_download_complete));
+                        contentText = res.getString(R.string.notification_download_complete);
+
+                        builder.setContentText(contentText);
                     }
                 }
 
-- 
1.9.0

